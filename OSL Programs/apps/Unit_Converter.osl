window "show"
window "dimensions" 320 200
window "resizable" False

def "check"
  network "get" "https://raw.githubusercontent.com/Mistium/Origin-OS/main/utilities/conversions.json"
  keys_main = data.getall("keys")
endef

check
expanded = False
input_type = "digital storage".destr

mainloop:
keys = data.getall("keys")
if data.contains(input_type) (
  data_current = data.key(input_type)
  keys = data_current.getall("keys")
)
w = 320
arrow = "left"
if expanded (
  w = 640
  arrow = "right"
)
window "dimensions" w 200
loc -2 999 -160 0
c #111
square 300 180 10 : c#222

loc -2 2 -160 -55
input 310 30 "type" "Conversion Type" : c#222

loc -2 2 -160 -90
input 310 30 "in" "Data To Be Converted" : c#222

loc -2 2 -240 -130
input 150 25 "in_type" "Input Type..." : c#222

loc -2 2 -80 -130
input 150 25 "Out_type" "Output Type..." : c#222
multiplier_in = data_current.key(input_in_type)
multiplier_out = data_current.key(input_out_type)
out = input_in.destr * multiplier_in / multiplier_out
loc -2 2 -310 -180
valid = multiplier_in.is(null).not and multiplier_out.is(null).not

if valid (
  text "<out> <input_out_type>" 8 : c#222
)
loc -2 -2 -20 20
square 20 20 10 1 : c#222

loc -2 2 -260 -20
square 20 20 10 1

loc -2 2 -300 -20
square 20 20 10 1

icon arrow 0.6 : c#fff
if clicked and can (
  can = False
  expanded = expanded.not
)
loc -2 2 -260 -20
icon "reload" 0.6
if clicked "check"
loc -2 -2 -20 20
icon "copy" 0.6
if clicked (
clipboard "set" out + input_out_type
)
if mouse_down.not "can = True"
if expanded (
c #111
frame -630 100 0 -100 keys.len * 33
count = 0
loop keys.len (
count += 1
y = count * -33 + scroll_y + 10
loc 2 2 160 y
c #222
square frame_width - 30 20 10 1
loc 2 2 25 y
c #fff
text keys.[count] 8
)
)
frame "clear"
import "win-buttons"
